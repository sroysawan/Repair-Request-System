// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  firstName    String
  lastName     String
  department   Department   @relation(fields: [departmentId], references: [id])
  departmentId Int
  position     Position     @relation(fields: [positionId], references: [id])
  positionId   Int
  email        String       @unique
  userName     String       @unique
  password     String
  picture      Image?       @relation(fields: [pictureId], references: [id])
  pictureId    Int?
  role         Role
  enabled      Boolean      @default(true)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  Assignment   Assignment[]
}

model Department {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User[]
}

model Position {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User[]
}

model Image {
  id             Int          @id @default(autoincrement())
  asset_id       String
  public_id      String
  url            String
  secure_url     String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  user           User[]
  equipment      Equipment    @relation(fields: [equipmentId], references: [id], onDelete: Cascade)
  equipmentId    Int
  reportRepair   ReportRepair? @relation(fields: [reportRepairId], references: [id], onDelete: Cascade)
  reportRepairId Int?
}

model Equipment {
  id                  Int                @id @default(autoincrement())
  name                String
  equipmentNumber     String?
  address             String?
  equipmentCategory   EquipmentCategory? @relation(fields: [equipmentCategoryId], references: [id])
  equipmentCategoryId Int?
  statusEquipment     StatusEquipment
  images              Image[]
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
}

model EquipmentCategory {
  id           Int            @id @default(autoincrement())
  name         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  equipment    Equipment[]
  reportRepair ReportRepair[]
}

model ReportRepair {
  id                  Int                @id @default(autoincrement())
  name                String
  equipmentNumber     String?
  equipmentCategory   EquipmentCategory? @relation(fields: [equipmentCategoryId], references: [id])
  equipmentCategoryId Int?
  problem             String?
  address             String?
  images              Image[]
  assignmentStatus    AssignmentStatus   @default(PENDING)
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  Assignment          Assignment[]
}

model Assignment {
  id             Int              @id @default(autoincrement())
  reportRepair   ReportRepair     @relation(fields: [reportRepairId], references: [id])
  reportRepairId Int
  technician     User             @relation(fields: [technicianId], references: [id])
  technicianId   Int
  assignedAt     DateTime         @default(now())
  startedAt      DateTime?
  finishedAt     DateTime?
  status         AssignmentStatus
  solution       String?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

enum Role {
  ADMIN
  SUPERVISOR
  TECHNICIAN
  USER
}

enum StatusEquipment {
  ACTIVE
  INACTIVE
  REPAIRING
  BROKEN
}

enum AssignmentStatus {
  PENDING // รอดำเนินการ
  IN_PROGRESS // กำลังซ่อม
  COMPLETED // ซ่อมเสร็จแล้ว
  CANCELLED // ยกเลิกงาน
}
